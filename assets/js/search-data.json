{
  
    
        "post0": {
            "title": "Capm",
            "content": "CAPM Summary /Part 1 . 자본시장 가격 결정 모형(Capital Asset Pricing Model, CAPM) . Ⅰ. 통계학 개념 정리 for finance . i) 공분산(Covariance) . 2개의 확률변수의 선형 관계를 나타내는 값 . ex) 한 변수의 값이 상승할 때, 다른 변수가 상승하는 경향을 보인다면, 양수의 공분산(Positive Covariance)를 갖고, 하락하는 경향을 보인다면 음수의 공분산(Negative Covariance)를 갖는다. . cf) 한 변수 값의 변화에 다른 변수가 반응하지 않는다면, 이는 각 변수간 선형관계가 존재하지 않음을 뜻하고, 이는 영의 공분산(Covariance of Zero)라 일컫는다. . | 공분산의 수학적 표현 . Cov(X,Y) = E([X-E(X)] [Y - E(Y)]) = E(XY)-E(X)E(Y) . | . ii) 상관계수(Correlation coefficient) . ● 두 변수 사이의 통계적 관계를 표현하기 위해 특정한 상관 관계의 정도를 수치적으로 나타낸 계수 . 값의 범위가 -1에서 +1 사이에 속함 +1의 상관관계를 갖는다는 것은, 평균에서의 편차(변수)가 항상 같은 방향으로 비례함을 의미. | -1의 상관관계를 갖는다는 것은, 평균에서의 편차(변수)가 항상 다른 방향으로 비례함을 의미.(반비례) | 0의 상관관계를 갖는다는 것은 두 변수간 선형 관계가 존재하지 않음을 의미함. | . | . iii)공분산과 상관계수의 관계 . 각 확률변수들이 ‘어떻게 퍼져있는지를 나타내는 것’이 공분산(Covariance)이다. . 즉, X가 커지면 Y도 커지거나 혹은 작아지거나 아니면 별 상관 없거나 등을 나타내어 주는 것이다. . . 공분산은 X와 Y의 단위(ex) 100점 만점일때의 공분산? 10점 만점일때의 공분산?)의 영향을 크게 받기 떄문에 . 이를 보완하기 위해 상관계수(Correlation)을 사용하는 것이다. 다시 말해, 확률 변수의 절대적 크기에 영향을 받지 않도록 단위화 시켰다고 생각하면 된다! . . 이를 풀어 쓰면, . 상관계수(x의 표준편차)(y의 표준편차) = Cov(X,Y)라 쓸 수 있다! . Ⅱ. 두 자산의 포트폴리오. . 두 자산 A,B에 대하여 포트폴리오 투자를 진행한다고 가정하자. . 각 자산의 비중 / Wa, Wb( Wa + Wb =1) . 각 자산의 수익률/Ra, Rb . 각 자산의 표준편차/Oa Ob . CAPM PART 2 . 복습) . 두 자산 포트폴리오의 위험(표준편차) 공식: . ​ O(Rp) = (Wa^2(Var(Ra))+Wb^2(Var(Rb))+2WaWb*(두 자산 상관계수)OaOb)^1/2 . 만약 자산b가 무위험자산이라면, 자산의 위험도와 자산a와의 상관계수가 0이므로, 위 포트폴리오의 위험 공식은 다음과 같이 표기된다. . ​ O(Rp) = WaOa . CAL(Capital Allocation Line) . . 무위험 자산만을 투자했을 때의 좌표와 위험자산(자산A)만을 투자했을 때의 좌표를 이어 선을 만들 수 있는데, 이를 자본할당선(Captial Allocation Line)이라 한다. . cf) 개별 투자자들이 가지고 있는 무차별 곡선과 CAL 사이의 최적점을 찾아, 자신의 투자 효용을 극대화하게 된다. . . CML(Captial Market Line) &amp; Efficient Frontier . 알고 넘어가야 할 개념 : . ​ 동질적 기대(Homogenous Expectation) : . ​ 모든 위험 자산에 대하여, 다른 위험 자산과의 상관계수, 수익률, 위험 등에 대한 동일한 추정을 가지고 있음. . 현대 포트폴리오 이론 기저에는 동질적 기대를 포함한다고 가정하는데, 이때, 모든 투자자들이 똑같은 효율적 한계선(Efficient Frontier)과 최적의 CAL를 갖는다고 생각할 수 있다. . 이때, 최적의 CAL, 모든 투자자들이 가지고 있는 Efficient Frontier에 무위험 자산 점과 잇는 접선을 자본시장선(Capital Market Line, CML )이라 한다. . . CML에 대하여 식을 세울 수 있다. . 포트폴리오의 기대수익률 = (무위험 자산 수익률) + ((시장포트폴리오 기대수익률 - 무위험자산 수익률)/시장 위험)*포트폴리오 위험 . ​ . (시장포트폴리오 기대수익률 - 무위험자산 수익률) = Market Risk Premium . 체계적 위험과 비체계적 위험 . . 비체계적 위험(Unsysematic Risk) : 포트폴리오 다양화로 처분될 수 있는 위험 . 체계적 위험(Systematic Risk) : 시장 내 일반적으로 존재하는 위험, 포트폴리오 다변화로 청산이 불가능한 위험이다. . 총 위험(Total Risk) = 비체계적 위험(Unsysematic Risk) + 체계적 위험(Systematic Risk) . cf) 한 자산을 포트폴리오 추가할 때, 비체계적 위험은 반드시 감소하나, 체계적 위험은 증가할 수도, 감소할 수도 있다! . CAPM의 기본가정 . 1.투자자 행동 a. 모든 투자자는 합리적이며, 평균분산최적화를 추구한다 b. 투자자들의 공통적인 계획 투자기간은 단일 기간이다. c. 동일한 입력자료 사용(동질적 기대) 2.시장구조 a. 모든증권은 공개적으로 소유되고 거래소에서 거래된다 b. 투자자는 공통적인 무위험 이자율로 차입과 대출이 가능하며, 거래되는 증권에 공매 포지션을 취 할 수있다 c. t세금은 없다 d. 거래비용은 없다. . E(rm)-rf=Aσm^2:위험프리미엄은 평균 위험회피도와 시장위험에 비례 . SML(Security Market Line) . 단일 요인 모형(Single-Index Model) : . ​ 한 자산의 수익률이 시장의 수익률과 어떤 관계를 지니는지 파악하는 모형. /단순회귀모형 ​ E(ri)=rf+Bi[E(rm)-rf]: 어떤 자산의 위험프리미엄은 그 자산의 체계적 위험 척도와 시장 포트폴리오의 위험프리미엄을 곱한 값이다 . . 특정 자산의 수익률은 시장수익률에 얼마나 민감하게 반응하는가? (우리나라에서 시장수익률은 KOSPI지수에서 나타낼 수 있다.) . CAPM의 한계: . 이론상의 시장포트폴리오와 실제 수익률이 아닌 기대수익률의 차이를 가진다는 점 . 다요인 모형: . 시장외적 모형이 투자자가 헤지하려는 체계적 위험의 중요한 일면을 포착한다 두 가지 거시경제적 위험의 원천이 1. 광범위한 시장지수의 수익률에 반영되는 경기순환 관련 불확실성 2.정부채권 수익률에 반영되는 예상치 못한 이자율 변동 다음 세가지 식의 합계로 나타낸다. 1.무위험 수익률 2.시장지수에 대한 증권의 민감도(Bim)에 지수의 위험프리미엄[E(rm)-rf]을 곱한 값 3.이자율 위험에 대한 증권의 민감도(즉, 정부채권 베타 Bitb와 정부채권 포트폴리오의 위험 프리미엄[E(rtb)-rf]을 곱한값) E(ri)=rf+Bim[E(rm)-rf]+Bitb[E(rtb)-rf] 여기서 Rtbt는 기간 t기간에서 정부채권포트폴리오의 초과수익율 # 파마-프랜치의 3요인 모형: 높은 장부대 시장 비율을 가진 기업에는 상대적으로 성숙한 기업이 불균형 적으로 많이 포함되어 있음. 이런 기업은 시장가치의 많은 부분이 성장기회 보다는 기존 자산의 시장가치에서 나온다. -&gt; 가치주 저 B/M기업은 시장가치 부분이 기존의 자산이 아나리 예상되는 미래현금흐름에서 나옴-&gt; 성장기업 가치주가 성장주보다 더 높은 평균 수익률 제공-&gt; 가치 프리미엄 대기업 주식이 중소기업 주식보다 덜 위험 . 3요인 모형 SML: . ri-rf=ai+Bm(rm-rf)+Bhmlrhml+Bsmb+rsmb+ei 가치대 성장요인(HML) 규모요인(SMb) .",
            "url": "https://pjsommium.github.io/fastpages_Johnson/2021/09/12/CAPM.html",
            "relUrl": "/2021/09/12/CAPM.html",
            "date": " • Sep 12, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://pjsommium.github.io/fastpages_Johnson/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://pjsommium.github.io/fastpages_Johnson/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. PJS . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://pjsommium.github.io/fastpages_Johnson/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://pjsommium.github.io/fastpages_Johnson/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}